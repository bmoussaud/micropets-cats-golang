#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("helpers.star","configfile","load_configfile")
---
apiVersion: v1
kind: Secret
metadata:
  name: cats-db-credentials  
type: Opaque
data:
  user: YWRtaW4K
  password: cGxlYXNlY2hhbmdlbWU=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ configfile("cats-config", "service_config.json")
data: #@ load_configfile("service_config.json")
---
kind: Deployment
apiVersion: apps/v1
metadata:  
  name: cats-app  
  labels:
    app: cats-app
    group: micro-pet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cats-app
      group: micro-pet
  template:
    metadata:
      labels:
        app: cats-app
        group: micro-pet
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: #@ configfile("cats-config", "service_config.json")
            items:
            - key: service_config.json
              path: service_config.json
      containers:
        - name: cats          
          image: #@ data.values.registry.server + "/micropet-cats:" +data.values.service.version
          imagePullPolicy: Always
          ports:
            - name: cats
              containerPort: #@ data.values.service.port
          livenessProbe:
            httpGet:
              port: #@ data.values.service.port
              path: /cats/liveness
            initialDelaySeconds: 5
            periodSeconds: 2
          readinessProbe:
            httpGet:
              port: #@ data.values.service.port
              path: /cats/readiness
            initialDelaySeconds: 5
            periodSeconds: 2
          volumeMounts:
            - name: config-volume
              mountPath: /config/
          env:
            - name: DATABASE_URL2
              value: jdbc:postgresql://cats-db:5432/cats
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: cats-db-credentials
                  key: user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cats-db-credentials
                  key: password            
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: cats-service
  labels:
    app: cats-app
    group: micro-pet
spec:
  ports:
    - protocol: TCP
      name: http-cats
      port: #@ data.values.service.port
  selector:
    app: cats-app
    group: micro-pet
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: cats-ingress
spec:
  rules:
    - host: #@ data.values.service.virtual_host
      http:
        paths:
          - path: /cats
            backend:
              serviceName: cats-service
              servicePort: #@ data.values.service.port




